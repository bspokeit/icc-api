/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { XHR } from "./XHR"
import { Delegation } from "../model/Delegation"
import { DocIdentifier } from "../model/DocIdentifier"
import { Form } from "../model/Form"
import { FormTemplate } from "../model/FormTemplate"
import { IcureStub } from "../model/IcureStub"
import { ListOfIds } from "../model/ListOfIds"
export declare class IccFormApi {
  host: string
  headers: Array<XHR.Header>
  fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  constructor(
    host: string,
    headers: any,
    fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  )
  setHeaders(h: Array<XHR.Header>): void
  handleError(e: XHR.XHRError): never
  /**
   * Returns an instance of created form.
   * @summary Create a form with the current user
   * @param body
   */
  createForm(body?: Form): Promise<Form>
  /**
   * Returns an instance of created form template.
   * @summary Create a form template with the current user
   * @param body
   */
  createFormTemplate(body?: FormTemplate): Promise<FormTemplate>
  /**
   *
   * @summary Delete a form template
   * @param formTemplateId
   */
  deleteFormTemplate(formTemplateId: string): Promise<DocIdentifier>
  /**
   * Response is a set containing the ID's of deleted forms.
   * @summary Delete forms.
   * @param formIds
   */
  deleteForms(formIds: string): Promise<Array<DocIdentifier>>
  /**
   *
   * @summary Gets all form templates for current user
   * @param loadLayout
   */
  findFormTemplates(loadLayout?: boolean): Promise<Array<FormTemplate>>
  /**
   *
   * @summary Gets all form templates
   * @param specialityCode
   * @param loadLayout
   */
  findFormTemplatesBySpeciality(
    specialityCode: string,
    loadLayout?: boolean
  ): Promise<Array<FormTemplate>>
  /**
   * Keys must be delimited by coma
   * @summary List forms found By Healthcare Party and secret foreign keys.
   * @param hcPartyId
   * @param secretFKeys
   * @param healthElementId
   * @param planOfActionId
   * @param formTemplateId
   */
  findFormsByHCPartyPatientForeignKeys(
    hcPartyId: string,
    secretFKeys: string,
    healthElementId?: string,
    planOfActionId?: string,
    formTemplateId?: string
  ): Promise<Array<Form>>
  /**
   * Keys must be delimited by coma
   * @summary List form stubs found By Healthcare Party and secret foreign keys.
   * @param hcPartyId
   * @param secretFKeys
   */
  findFormsDelegationsStubsByHCPartyPatientForeignKeys(
    hcPartyId: string,
    secretFKeys: string
  ): Promise<Array<IcureStub>>
  /**
   * Keys must be delimited by coma
   * @summary Get a list of forms by ids
   * @param formId
   * @param hcPartyId
   */
  getChildrenForms(formId: string, hcPartyId: string): Promise<Array<Form>>
  /**
   *
   * @summary Gets a form
   * @param formId
   */
  getForm(formId: string): Promise<Form>
  /**
   *
   * @summary Gets a form
   * @param externalUuid
   */
  getFormByExternalUuid(externalUuid: string): Promise<Form>
  /**
   *
   * @summary Gets a form template by guid
   * @param formTemplateId
   */
  getFormTemplate(formTemplateId: string): Promise<FormTemplate>
  /**
   *
   * @summary Gets a form template
   * @param formTemplateGuid
   * @param specialityCode
   */
  getFormTemplatesByGuid(
    formTemplateGuid: string,
    specialityCode: string
  ): Promise<Array<FormTemplate>>
  /**
   * Keys must be delimited by coma
   * @summary Get a list of forms by ids
   * @param body
   */
  getForms(body?: ListOfIds): Promise<Array<Form>>
  /**
   * Returns the modified form.
   * @summary Modify a form
   * @param body
   */
  modifyForm(body?: Form): Promise<Form>
  /**
   * Returns the modified forms.
   * @summary Modify a batch of forms
   * @param body
   */
  modifyForms(body?: Array<Form>): Promise<Array<Form>>
  /**
   * It delegates a form to a healthcare party. Returns the form with the new delegations.
   * @summary Delegates a form to a healthcare party
   * @param body
   * @param formId
   */
  newFormDelegations(formId: string, body?: Array<Delegation>): Promise<Form>
  /**
   * Keys must be delimited by coma
   * @summary Update delegations in form.
   * @param body
   */
  setFormsDelegations(body?: Array<IcureStub>): Promise<Array<IcureStub>>
  /**
   *
   * @summary Update a form template's layout
   * @param formTemplateId
   */
  setTemplateAttachmentMulti(formTemplateId: string): Promise<string>
  /**
   * Returns an instance of created form template.
   * @summary Modify a form template with the current user
   * @param body
   * @param formTemplateId
   */
  updateFormTemplate(formTemplateId: string, body?: FormTemplate): Promise<FormTemplate>
}
