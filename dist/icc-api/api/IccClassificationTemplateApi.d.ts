/**
 * iCure Cloud API Documentation
 * Spring shop sample application
 *
 * OpenAPI spec version: v0.0.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { XHR } from "./XHR"
import { ClassificationTemplate } from "../model/ClassificationTemplate"
import { Delegation } from "../model/Delegation"
import { DocIdentifier } from "../model/DocIdentifier"
import { PaginatedListClassificationTemplate } from "../model/PaginatedListClassificationTemplate"
export declare class IccClassificationTemplateApi {
  host: string
  headers: Array<XHR.Header>
  fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  constructor(
    host: string,
    headers: any,
    fetchImpl?: (input: RequestInfo, init?: RequestInit) => Promise<Response>
  )
  setHeaders(h: Array<XHR.Header>): void
  handleError(e: XHR.XHRError): never
  /**
   * Returns an instance of created classification Template.
   * @summary Create a classification Template with the current user
   * @param body
   */
  createClassificationTemplate(body?: ClassificationTemplate): Promise<ClassificationTemplate>
  /**
   * Response is a set containing the ID's of deleted classification Templates.
   * @summary Delete classification Templates.
   * @param classificationTemplateIds
   */
  deleteClassificationTemplates(classificationTemplateIds: string): Promise<Array<DocIdentifier>>
  /**
   * Keys hast to delimited by coma
   * @summary List classification Templates found By Healthcare Party and secret foreign keyelementIds.
   * @param hcPartyId
   * @param secretFKeys
   */
  findClassificationTemplatesByHCPartyPatientForeignKeys(
    hcPartyId: string,
    secretFKeys: string
  ): Promise<Array<ClassificationTemplate>>
  /**
   *
   * @summary Get a classification Template
   * @param classificationTemplateId
   */
  getClassificationTemplate(classificationTemplateId: string): Promise<ClassificationTemplate>
  /**
   * Ids are seperated by a coma
   * @summary Get a list of classifications Templates
   * @param ids
   */
  getClassificationTemplateByIds(ids: string): Promise<Array<ClassificationTemplate>>
  /**
   * Returns a list of classification templates.
   * @summary List all classification templates with pagination
   * @param startKey A label
   * @param startDocumentId An classification template document ID
   * @param limit Number of rows
   */
  listClassificationTemplates(
    startKey: string,
    startDocumentId: string,
    limit: number
  ): Promise<PaginatedListClassificationTemplate>
  /**
   * Returns the modified classification Template.
   * @summary Modify a classification Template
   * @param body
   */
  modifyClassificationTemplate(body?: ClassificationTemplate): Promise<ClassificationTemplate>
  /**
   * It delegates a classification Template to a healthcare party (By current healthcare party). Returns the element with new delegations.
   * @summary Delegates a classification Template to a healthcare party
   * @param body
   * @param classificationTemplateId
   */
  newClassificationTemplateDelegations(
    classificationTemplateId: string,
    body?: Array<Delegation>
  ): Promise<ClassificationTemplate>
}
